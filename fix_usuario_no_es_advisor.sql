-- ===================================================================
-- SOLUCI√ìN: AGREGAR USUARIO ACTUAL COMO ADVISOR
-- ===================================================================
-- Fecha: 20 de Octubre, 2025
-- Problema: Usuario no es advisor, por eso no puede eliminar clientes

-- ===================================================================
-- 1. VER EL USUARIO ACTUAL
-- ===================================================================

SELECT 
  'üë§ USUARIO ACTUAL' as seccion;

SELECT 
  auth.uid() as user_id,
  auth.jwt() ->> 'email' as email,
  CASE 
    WHEN auth.uid() IS NULL THEN '‚ùå NO AUTENTICADO'
    ELSE '‚úÖ AUTENTICADO'
  END as estado;

-- ===================================================================
-- 2. VERIFICAR SI YA EXISTE EN ADVISORS
-- ===================================================================

SELECT 
  'üîç VERIFICAR EN ADVISORS' as seccion;

SELECT 
  id,
  full_name,
  email,
  phone,
  created_at
FROM advisors
WHERE id = auth.uid();

-- Si aparece vac√≠o, tu usuario NO est√° en advisors

-- ===================================================================
-- 3. VER TODOS LOS ADVISORS EXISTENTES
-- ===================================================================

SELECT 
  'üë• ADVISORS EXISTENTES' as seccion;

SELECT 
  id,
  full_name,
  email,
  phone,
  active,
  created_at
FROM advisors
ORDER BY created_at DESC;

-- ===================================================================
-- 4. AGREGAR TU USUARIO COMO ADVISOR
-- ===================================================================

-- OPCI√ìN A: Si sabes tu informaci√≥n personal
-- Reemplaza los valores con tu informaci√≥n real

INSERT INTO advisors (
  id,
  full_name,
  email,
  phone,
  active,
  created_at,
  updated_at
) VALUES (
  auth.uid(),
  'Admin Principal', -- ‚Üê CAMBIAR POR TU NOMBRE
  auth.jwt() ->> 'email', -- Toma el email autom√°ticamente
  '+1234567890', -- ‚Üê CAMBIAR POR TU TEL√âFONO
  true,
  NOW(),
  NOW()
)
ON CONFLICT (id) DO UPDATE SET
  active = true,
  updated_at = NOW();

-- ===================================================================
-- OPCI√ìN B: Si ya tienes un advisor y quieres usar ese ID
-- ===================================================================

-- Primero, identifica el ID del advisor que quieres usar:
SELECT 
  'üÜî IDs DISPONIBLES' as seccion;

SELECT 
  id,
  full_name,
  email
FROM advisors
WHERE active = true;

-- Luego, OPCI√ìN: Actualizar el ID del advisor existente a tu auth.uid()
-- ‚ö†Ô∏è CUIDADO: Esto cambiar√° el ID del advisor
-- Solo ejecuta si est√°s seguro

/*
-- NO EJECUTAR sin revisar primero
UPDATE advisors
SET id = auth.uid()
WHERE email = 'tu-email@ejemplo.com'; -- ‚Üê CAMBIAR POR EL EMAIL DEL ADVISOR
*/

-- ===================================================================
-- 5. VERIFICACI√ìN FINAL
-- ===================================================================

SELECT 
  '‚úÖ VERIFICACI√ìN POST-FIX' as seccion;

-- Verificar que ahora S√ç eres advisor
SELECT 
  'Ahora soy advisor?' as pregunta,
  CASE 
    WHEN EXISTS (SELECT 1 FROM advisors WHERE id = auth.uid()) THEN '‚úÖ S√ç - LISTO!'
    ELSE '‚ùå NO - Ejecuta el INSERT de arriba'
  END as respuesta;

-- Ver tu registro en advisors
SELECT 
  'üë§ MI REGISTRO EN ADVISORS' as seccion;

SELECT 
  id,
  full_name,
  email,
  phone,
  active,
  created_at
FROM advisors
WHERE id = auth.uid();

-- ===================================================================
-- 6. PROBAR DELETE
-- ===================================================================

-- Ahora intenta eliminar un cliente de prueba desde la aplicaci√≥n
-- Deber√≠a funcionar correctamente

-- ===================================================================
-- INTERPRETACI√ìN
-- ===================================================================

/*
DESPU√âS DE EJECUTAR ESTE SCRIPT:

1Ô∏è‚É£ Tu usuario (auth.uid) estar√° en la tabla advisors
2Ô∏è‚É£ Las pol√≠ticas RLS permitir√°n DELETE
3Ô∏è‚É£ Podr√°s eliminar clientes desde la aplicaci√≥n
4Ô∏è‚É£ Los clientes eliminados NO volver√°n a aparecer

INSTRUCCIONES:

PASO 1: Ejecuta la secci√≥n 1, 2 y 3 para ver tu informaci√≥n
PASO 2: Copia el resultado de la secci√≥n 1 (tu user_id y email)
PASO 3: Modifica el INSERT en la secci√≥n 4 con tu informaci√≥n
PASO 4: Ejecuta el INSERT
PASO 5: Ejecuta la secci√≥n 5 para verificar
PASO 6: Refresca la aplicaci√≥n y prueba eliminar un cliente

ALTERNATIVA R√ÅPIDA:
Si ya existe un advisor en la tabla, puedes usar ese registro.
Solo necesitas que tu auth.uid() coincida con uno de los IDs en advisors.

NOTA IMPORTANTE:
- auth.uid() es el ID de tu sesi√≥n de Supabase Auth
- advisors.id debe ser igual a auth.uid() para que RLS permita las operaciones
- Si no coinciden, RLS bloquear√° todo (SELECT, INSERT, UPDATE, DELETE)
*/

-- ===================================================================
-- SOLUCI√ìN ALTERNATIVA: DESACTIVAR RLS TEMPORALMENTE (NO RECOMENDADO)
-- ===================================================================

-- ‚ö†Ô∏è SOLO EN DESARROLLO / TESTING
-- ‚ö†Ô∏è NO USAR EN PRODUCCI√ìN

/*
-- Desactivar RLS en la tabla clients (permite DELETE sin restricciones)
ALTER TABLE clients DISABLE ROW LEVEL SECURITY;

-- Para reactivar:
ALTER TABLE clients ENABLE ROW LEVEL SECURITY;

-- IMPORTANTE: Esto es inseguro y solo debe usarse temporalmente
-- para probar si el problema es realmente RLS
*/
