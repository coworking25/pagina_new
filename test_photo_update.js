// Test para actualizar fotos de asesores - ejecutar en la consola del navegador
// Una vez que se cargue la p√°gina, copiar y pegar esto en la consola

console.log('üîß Test de actualizaci√≥n de fotos de asesores');

// Funci√≥n simplificada
async function updatePhotos() {
  try {
    // Verificar conexi√≥n
    console.log('üîå Verificando conexi√≥n a Supabase...');
    const { data: test, error: testError } = await window.supabase.from('advisors').select('count').single();
    
    if (testError) {
      console.error('‚ùå Error de conexi√≥n:', testError);
      return;
    }
    
    console.log('‚úÖ Conexi√≥n OK');
    
    // Actualizar Santiago
    console.log('üì∏ Actualizando Santiago S√°nchez...');
    const { error: e1 } = await window.supabase
      .from('advisors')
      .update({ photo_url: '1.jpeg' })
      .eq('name', 'Santiago S√°nchez');
    
    if (e1) console.error('Error Santiago:', e1);
    else console.log('‚úÖ Santiago actualizado');
    
    // Actualizar Andr√©s
    console.log('üì∏ Actualizando Andr√©s Metrio...');
    const { error: e2 } = await window.supabase
      .from('advisors')
      .update({ photo_url: '2.jpg' })
      .eq('name', 'Andr√©s Metrio');
    
    if (e2) console.error('Error Andr√©s:', e2);
    else console.log('‚úÖ Andr√©s actualizado');
    
    console.log('üèÅ Actualizaci√≥n completada');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  }
}

// Auto-ejecutar despu√©s de 2 segundos
setTimeout(() => {
  if (window.supabase) {
    updatePhotos();
  } else {
    console.log('‚è≥ Supabase no est√° disponible a√∫n');
  }
}, 2000);
