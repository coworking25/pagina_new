-- ===================================================================
-- DIAGN√ìSTICO COMPLETO DEL SISTEMA DE ADMINISTRACI√ìN
-- ===================================================================
-- Este script unifica todos los resultados en una sola consulta

WITH 
-- Tu sesi√≥n actual
sesion AS (
  SELECT 
    auth.uid() as mi_id,
    auth.jwt() ->> 'email' as mi_email
),
-- Verificaciones
verificaciones AS (
  SELECT 
    '1Ô∏è‚É£ TU SESI√ìN' as seccion,
    'ID: ' || COALESCE(auth.uid()::text, 'NULL') || 
    ' | Email: ' || COALESCE(auth.jwt() ->> 'email', 'NULL') as info
  UNION ALL
  SELECT 
    '2Ô∏è‚É£ ¬øERES ADMIN?',
    CASE WHEN is_admin() THEN '‚úÖ S√ç' ELSE '‚ùå NO' END
  UNION ALL
  SELECT 
    '3Ô∏è‚É£ ¬øERES ADVISOR?',
    CASE WHEN is_advisor() THEN '‚úÖ S√ç' ELSE '‚ùå NO' END
  UNION ALL
  SELECT 
    '4Ô∏è‚É£ ¬øEST√ÅS EN user_profiles?',
    CASE 
      WHEN EXISTS (SELECT 1 FROM user_profiles WHERE id = auth.uid())
      THEN '‚úÖ S√ç'
      ELSE '‚ùå NO'
    END
  UNION ALL
  SELECT 
    '5Ô∏è‚É£ ¬øEST√ÅS EN advisors?',
    CASE 
      WHEN EXISTS (SELECT 1 FROM advisors WHERE id = auth.uid())
      THEN '‚úÖ S√ç'
      ELSE '‚ùå NO'
    END
)
SELECT * FROM verificaciones;

-- ===================================================================
-- VER CONTENIDO DE user_profiles (DASHBOARD ADMINS)
-- ===================================================================
SELECT 
  'ÔøΩ TABLA: user_profiles' as tipo,
  id::text as identificador,
  email,
  COALESCE(role, 'sin_role') as role,
  COALESCE(full_name, 'sin_nombre') as full_name,
  created_at::text as created_at
FROM user_profiles
ORDER BY created_at DESC;

-- ===================================================================
-- VER USUARIOS EN auth.users (DIEGO Y admincoworkin)
-- ===================================================================
SELECT 
  'ÔøΩ TABLA: auth.users' as tipo,
  id::text as identificador,
  email,
  COALESCE((raw_user_meta_data->>'full_name')::text, 'sin_metadata') as metadata,
  created_at::text as created_at
FROM auth.users
WHERE email IN ('diegoadmin@gmail.com', 'admincoworkin@inmobiliaria.com')
   OR id = auth.uid()
ORDER BY created_at DESC;

-- ===================================================================
-- VER DEFINICI√ìN DE is_admin() Y is_advisor()
-- ===================================================================
SELECT 
  'ÔøΩ FUNCI√ìN: is_admin()' as tipo,
  pg_get_functiondef(oid) as codigo_completo
FROM pg_proc
WHERE proname = 'is_admin'
UNION ALL
SELECT 
  'üîç FUNCI√ìN: is_advisor()' as tipo,
  pg_get_functiondef(oid) as codigo_completo
FROM pg_proc
WHERE proname = 'is_advisor';
